{"ast":null,"code":"var _jsxFileName = \"A:\\\\chatapp\\\\chat\\\\src\\\\components\\\\outbutton.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Outbutton = () => {\n  _s();\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\n  const updateScreenWidth = () => {\n    setScreenWidth(window.innerWidth);\n  };\n  useEffect(() => {\n    // Add an event listener to update the screen width on resize\n    window.addEventListener('resize', updateScreenWidth);\n\n    // Remove the event listener on component unmount\n    return () => {\n      window.removeEventListener('resize', updateScreenWidth);\n    };\n  }, []);\n  const containerStyle = {\n    textAlign: 'center' // Center the button within the container\n  };\n  const buttonStyle = {\n    padding: '0.5em',\n    width: '5%',\n    fontSize: '1em',\n    backgroundsize: 'contain'\n  };\n  const responsiveButtonStyle = {\n    /* Add responsive styles here */\n    width: screenWidth <= 768 ? '10%' : '5%',\n    // Adjust the width for smaller screens\n    fontSize: screenWidth <= 768 ? '0.8em' : '1em' // Adjust the font size for smaller screens\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        ...buttonStyle,\n        ...responsiveButtonStyle\n      },\n      children: \"Shorten\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Outbutton, \"mJOq52LKVWj4vGR2hEwZVHWsLAc=\");\n_c = Outbutton;\nexport default Outbutton;\nvar _c;\n$RefreshReg$(_c, \"Outbutton\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Outbutton","_s","screenWidth","setScreenWidth","window","innerWidth","updateScreenWidth","addEventListener","removeEventListener","containerStyle","textAlign","buttonStyle","padding","width","fontSize","backgroundsize","responsiveButtonStyle","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["A:/chatapp/chat/src/components/outbutton.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Outbutton = () => {\r\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n\r\n  const updateScreenWidth = () => {\r\n    setScreenWidth(window.innerWidth);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Add an event listener to update the screen width on resize\r\n    window.addEventListener('resize', updateScreenWidth);\r\n\r\n    // Remove the event listener on component unmount\r\n    return () => {\r\n      window.removeEventListener('resize', updateScreenWidth);\r\n    };\r\n  }, []);\r\n\r\n  const containerStyle = {\r\n    textAlign: 'center', // Center the button within the container\r\n  };\r\n\r\n  const buttonStyle = {\r\n    padding: '0.5em',\r\n    width: '5%',\r\n    fontSize: '1em',\r\n    backgroundsize:'contain'\r\n  };\r\n\r\n  const responsiveButtonStyle = {\r\n    /* Add responsive styles here */\r\n    width: screenWidth <= 768 ? '10%' : '5%', // Adjust the width for smaller screens\r\n    fontSize: screenWidth <= 768 ? '0.8em' : '1em', // Adjust the font size for smaller screens\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <button style={{ ...buttonStyle, ...responsiveButtonStyle }}>Shorten</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Outbutton;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAACQ,MAAM,CAACC,UAAU,CAAC;EAEjE,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BH,cAAc,CAACC,MAAM,CAACC,UAAU,CAAC;EACnC,CAAC;EAEDR,SAAS,CAAC,MAAM;IACd;IACAO,MAAM,CAACG,gBAAgB,CAAC,QAAQ,EAAED,iBAAiB,CAAC;;IAEpD;IACA,OAAO,MAAM;MACXF,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAEF,iBAAiB,CAAC;IACzD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,cAAc,GAAG;IACrBC,SAAS,EAAE,QAAQ,CAAE;EACvB,CAAC;EAED,MAAMC,WAAW,GAAG;IAClBC,OAAO,EAAE,OAAO;IAChBC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,KAAK;IACfC,cAAc,EAAC;EACjB,CAAC;EAED,MAAMC,qBAAqB,GAAG;IAC5B;IACAH,KAAK,EAAEX,WAAW,IAAI,GAAG,GAAG,KAAK,GAAG,IAAI;IAAE;IAC1CY,QAAQ,EAAEZ,WAAW,IAAI,GAAG,GAAG,OAAO,GAAG,KAAK,CAAE;EAClD,CAAC;EAED,oBACEH,OAAA;IAAKkB,KAAK,EAAER,cAAe;IAAAS,QAAA,eACzBnB,OAAA;MAAQkB,KAAK,EAAE;QAAE,GAAGN,WAAW;QAAE,GAAGK;MAAsB,CAAE;MAAAE,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1E,CAAC;AAEV,CAAC;AAACrB,EAAA,CAvCID,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAyCf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}